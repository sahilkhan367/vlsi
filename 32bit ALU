module alufnt(input[31:0]a, b, input[3:0]sel, output[31:0]out, output cyout);
reg[63:0]result;
wire[64:0]tmp;
assign out=result
assign tmp={1'b0,a}+{1'b0,b};
assign cyout=tmp[64];
always@(*)
begin
case(sel)
4'b0000:result=a&b;
4'b0001:result=a+b;
4'b0010:result=a^b;
4'b0011:result=~(a^b);
4'b0100:result=(a/b);
4'b0101:result=~(a&b);
default:result=a-b;
endcase
end
endmodule



TEST BENCH

module alufnttbff_v;
reg[31:0]a; reg[31:0]b; reg[3:0]sel;
wire [31:0]out;
wire cyout;
integer i;
alufnt uut(.a(a),.b(b),.sel(sel),.out(out),.cyout(cyout));
initial begin
a=32'h05;
b=32'h04;
sel=4'h0;
for(i=0; i<=15; i=i+1)
begin
sel=sel+8'h01; #10;
a=8'h0f;
b=8'h0f;
end
end
endmodule
